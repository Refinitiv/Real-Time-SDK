Transport API Non-Interactive Provider (NIP) Training Application Description

Module 1b: Ping (heartbeat) Management

--------
Summary:
--------

A Non-Interactive Provider (NIP) writes a provider application that
connects to Refinitiv Real-Time Distribution System and sends a specific
set (non-interactive) of information (services, domains, and capabilities).

NIPs act like clients in a client-server relationship. Multiple NIPs can
connect to the same Refinitiv Real-Time Distribution System and publish
the same items and content.

In this module, after establishing a connection, ping messages might
need to be exchanged. The negotiated ping timeout is available via
the IChannel. If ping heartbeats are not sent or received within
the expected time frame, the connection can be terminated. Refinitiv
recommends sending ping messages at intervals one-third the
size of the ping timeout.

Detailed Descriptions:

Ping or heartbeat messages are used to indicate the continued presence of
an application. These are typically only required when no other information
is being exchanged. For example, there may be long periods of time that
elapse between requests made from an OMM NIP application to ADH Infrastructure.

In this situation, the NIP would send periodic heartbeat messages to inform
the ADH Infrastructure that it is still alive. Because the ADH Infrastructure
is likely sending more frequent information, providing updates
on any streams the NIP has requested, it may not need to send
heartbeats as the other data is sufficient to announce its continued
presence. It is the responsibility of each connection to manage the sending
and receiving of heartbeat messages.

-----------------
Application Name:
-----------------

NIProvMod1b

------------------
Setup Environment:
------------------

No additional files are necessary to run this application.

-------------------
Command line usage:
-------------------

dotnet run

Runs with a default set of parameters (-h localhost -p 14003 -i "")

or

dotnet run -- [-h <SrvrHostname>] [-p <SrvrPortNo>] [-i <InterfaceName>]

To view all command-line options, run:

dotnet run -- -?

Pressing the Ctrl+C buttons terminates the program.

-----------------
Compiling Source:
-----------------

The included project file is set up to run from the file locations as presented
through the distribution package.

To compile, run the `dotnet build` command with desired parameters
(configuration, architecture, etc.)

For windows platform, using Visual Studio, open the main ETA.NET.sln solution
file and build the NIProvMod1b project.

----------------
Example Content:
----------------

Included for this application are:

- Source files.

- This document.

--------------------
Detailed Description
--------------------

Module_1b_Ping.cs - The main file for the Transport API Non-Interactive Provider (NIP) Training application.
