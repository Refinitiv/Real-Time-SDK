Transport API Non-Interactive Provider (NIP) Training Application Description

Module 3: Provide Source Directory Information

--------
Summary:
--------

A Non-Interactive Provider (NIP) writes a provider application that
connects to Refinitiv Real-Time Distribution and sends a specific set
(non-interactive) of information (services, domains, and capabilities).

NIPs act like clients in a client-server relationship. Multiple NIPs can
connect to the same Refinitiv Real-Time Distribution and publish the same
items and content. The NIP application sends a login request like a consumer
to the ADH and processes source directory and item requests like a provider.
A source directory refresh message and market price and/or market by order
refresh/update messages are published to the ADH without any request for them.

In this module, OMM NIP application provides Source Directory information.
The Source Directory domain model conveys information about all available
services in the system. After completing the Login process, an OMM NIP must
provide a Source Directory refresh.

Detailed Descriptions:

The Source Directory domain model conveys information about all
available services in the system. After completing the Login process,
an OMM NIP must provide a Source Directory refresh indicating:

a) Service, service state, QoS, and capability information associated
   with the NIP
b) Supported domain types and any item group information associated
   with the service.

At a minimum, Refinitiv recommends that the NIP send the Info,
State, and Group filters for the Source Directory. Because this is provider
instantiated, the NIP should use a streamId with a negative value.

a) The Source Directory Info filter contains service name and serviceId
   information for all available services, though NIPs typically provide data
   on only one service.
b) The Source Directory State filter contains status information for service.
   This informs the ADH whether the service is Up and available or Down and
   unavailable.
c) The Source Directory Group filter conveys item group status information,
   including information about group states as well as the merging of groups.

For additional information about item groups, refer to Transport API C Developer Guide.

Content is encoded and decoded using the Transport API Message Package and the Transport API
Data Package.

-----------------
Application Name:
-----------------

NIProvMod3

------------------
Setup Environment:
------------------

No additional files are necessary to run this application.

-------------------
Command line usage:
-------------------

dotnet run

Runs with a default set of parameters (-h localhost -p 14003 -i "" -r 300 -s DIRECT_FEED -id 1)

or

dotnet run -- [-h <SrvrHostname>] [-p <SrvrPortNo>] [-i <InterfaceName>] [-r <Running Time>] [-id <Service ID>]

To view all command-line options, run:

dotnet run -- -?

Pressing the Ctrl+C buttons terminates the program.

-----------------
Compiling Source:
-----------------

The included project file is set up to run from the file locations as presented
through the distribution package.

To compile, run the `dotnet build` command with desired parameters
(configuration, architecture, etc.)

For windows platform, using Visual Studio, open the main ETA.NET.sln solution
file and build the NIProvMod3 project.

----------------
Example Content:
----------------

Included for this application are:

- Source files.

- This document.

--------------------
Detailed Description
--------------------

Module_3_ProvideDirectory.cs - The main file for the Transport API Non-Interactive Provider (NIP) Training application.
