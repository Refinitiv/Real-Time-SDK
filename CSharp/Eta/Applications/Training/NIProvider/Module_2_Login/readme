Transport API Non-Interactive Provider (NIP) Training Application Description

Module 2: Log in

--------
Summary:
--------

A Non-Interactive Provider (NIP) writes a provider application that
connects to Refinitiv Real-Time Distribution and sends a specific set
(non-interactive) of information (services, domains, and capabilities).

NIPs act like clients in a client-server relationship. Multiple NIPs can
connect to the same Refinitiv Real-Time Distribution and publish the same
items and content. The NIP application sends a login request like a consumer
to the ADH and processes source directory and item requests like a provider.
A source directory refresh message and market price and/or market by order
refresh/update messages are published to the ADH without any request for them.

In this module, applications authenticate with one another using the Login
domain model. An OMM NIP must register with the system using a Login request
prior to providing any content. Because this is done in an interactive manner,
the NIP should assign a streamId with a positive value which the ADH will
reference when sending its response.

Detailed Descriptions:

After receiving a Login request, the ADH determines whether the NIP is
permissioned to access the system. The ADH sends a Login response, indicating
to the NIP whether the ADH grants it access.

a) If the application is denied, the ADH closes the Login stream and the
   NI provider application cannot perform any additional communication.
b) If the application gains access to the ADH, the Login response informs
   the application of this. The NI provider must now provide a Source Directory.

Content is encoded and decoded using the Transport API Message Package and the Transport API
Data Package.

-----------------
Application Name:
-----------------

NIProvMod2

------------------
Setup Environment:
------------------

No additional files are necessary to run this application.

-------------------
Command line usage:
-------------------

dotnet run

Runs with a default set of parameters (-h localhost -p 14003 -i "" -r 300 -s DIRECT_FEED)

or

dotnet run -- [-h <SrvrHostname>] [-p <SrvrPortNo>] [-i <InterfaceName>] [-r <Running Time>]

To view all command-line options, run:

dotnet run -- -?

Pressing the Ctrl+C buttons terminates the program.

-----------------
Compiling Source:
-----------------

The included project file is set up to run from the file locations as presented
through the distribution package.

To compile, run the `dotnet build` command with desired parameters
(configuration, architecture, etc.)

For windows platform, using Visual Studio, open the main ETA.NET.sln solution
file and build the NIProvMod2 project.

----------------
Example Content:
----------------

Included for this application are:

- Source files.

- This document.

--------------------
Detailed Description
--------------------

Module_2_Login.cs - The main file for the Transport API Non-Interactive Provider (NIP) Training application.
