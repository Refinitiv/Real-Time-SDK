plugins {
	id 'org.openjfx.javafxplugin' version '0.0.9' apply(false)
}

apply plugin: 'application'
if (JavaVersion.current().java11Compatible) {
	apply plugin: 'org.openjfx.javafxplugin'
}
eclipse {
        project {
                name = 'RTSDK-Ema-Examples'
        }
}

dependencies {
	implementation project(':Ema:Core')
	implementation project(':Ema:PerfTools')
	testImplementation group: 'junit', name: 'junit', version: '4.12'
}

if (JavaVersion.current().java11Compatible) {
	javafx {
		version = "16"
		modules = ['javafx.controls', 'javafx.fxml']
	}
}

mainClassName = 'com.refinitiv.ema.examples.training.iprovider.series100.ex100_MP_Streaming.IProvider'

task createExtraRunApp(type: CreateStartScripts) {
	mainClass.set('com.refinitiv.ema.examples.training.iprovider.series100.ex100_MP_Streaming.IProvider')
	classpath = startScripts.classpath
	outputDir = startScripts.outputDir
	applicationName = 'iprovider100'
	classpath += files ('build/classes/java')
}

task copyDictionary{
	outputs.files files('../../etc')
			.asFileTree
			.files
			.collect{'./${it.name}'}

	doLast{
		copy{
			from '../../etc'
			into './'
		}
	}
}

task copyEmaConfig{
	outputs.files files('../EmaConfig.xml')
			.asFileTree
			.files
			.collect{'./${it.name}'}

	doLast{
		copy{
			from '../EmaConfig.xml'
			into './'
		}
	}
}

task deleteDictionary( type: Delete ) {
	delete "$projectDir/RDMFieldDictionary"
	delete "$projectDir/RDMFieldDictionary_large"
	delete "$projectDir/enumtype.def"
}

def JVM_OPTIONS = "-Xms512m -Xmx1024m"
def JVM_OPTIONS_RTTVIEWER_DESKTOP = "-Xms1g -Xmx2g"

task deleteEmaConfig( type: Delete ) {
	delete "$projectDir/EmaConfig.xml"
}

run.dependsOn copyDictionary, copyEmaConfig
clean.dependsOn deleteDictionary, deleteEmaConfig

tasks.withType ( JavaExec ) {
	// to enable the logger comment out the line below
	// jvmArgs += "-Djava.util.logging.config.file=../Core/src/main/resources/logging.properties"
}

/* Automatically generates the tasks for all example applications */
fileTree('.') {
	include '**/*.java'
	}.collect { relativePath(it.parent) }.each { 

	def exampleMainLocation = (it.replace(File.separator, '.') )

	def TaskName = (exampleMainLocation.substring(exampleMainLocation.lastIndexOf('.') + 1) ).replaceAll('\\D+', '')
	def TaskDescription = (exampleMainLocation.substring(exampleMainLocation.lastIndexOf('.') + 1))
    def ExampleType 

	// create tasks names, descriptions based on the type of the example and example number
	if ( exampleMainLocation.contains('niprovider') )
	{
		TaskName = 'runniprovider' + TaskName
		TaskDescription = 'NiProvider ' + TaskDescription
		exampleMainLocation = exampleMainLocation.replace('src.main.java.', '') + '.NiProvider'
        ExampleType = 'Non Interactive Provider'
	}
	else if ( exampleMainLocation.contains('consumer') )
	{
		TaskName = 'runconsumer' + TaskName
		TaskDescription = 'Consumer ' + TaskDescription
		exampleMainLocation = exampleMainLocation.replace('src.main.java.', '') + '.Consumer'
        ExampleType = 'Consumer'
	}
	else if ( exampleMainLocation.contains('iprovider') )
	{
		TaskName = 'runiprovider' + TaskName
		TaskDescription = 'IProvider ' + TaskDescription
		exampleMainLocation = exampleMainLocation.replace('src.main.java.', '') + '.IProvider'
        ExampleType = 'Interactive Provider'
	} else {
		return
	}

	// creating tasks for running all the examples dynamically
	task "${TaskName}" ( type: JavaExec ) {
        group 'Run EMA ' + ExampleType + ' Application Examples'

		description 'This task runs the ' + TaskDescription

		dependsOn copyDictionary, copyEmaConfig

		if (JVM_OPTIONS)
			jvmArgs Eval.me ( buildArgsList ( JVM_OPTIONS ) )

		main = exampleMainLocation
		classpath = sourceSets.main.runtimeClasspath
	}
}

task runrrtviewerdesktop ( type: JavaExec ) {
	def exampleMainLocation = 'com.refinitiv.ema.examples.rrtmdviewer.desktop.RRTMDViewerDesktopMain'
	def TaskDescription = 'RRTMDViewerDesktop'
	group 'Run EMA RRTMDViewer desktop'

	description 'This task runs the ' + TaskDescription

	dependsOn copyDictionary, copyEmaConfig

	jvmArgs += "-Djava.util.logging.config.file=src/main/resources/rrtmdviewer/desktop/logging.properties"

	if (JVM_OPTIONS_RTTVIEWER_DESKTOP)
		jvmArgs Eval.me ( buildArgsList ( JVM_OPTIONS_RTTVIEWER_DESKTOP ) )

	mainClass.set(exampleMainLocation)
	classpath = sourceSets.main.runtimeClasspath
}

task createRRTViewerFatJar (type: Jar) {

	group 'Run EMA RRTMDViewer desktop'
	description 'This task builds fat jar for RRTViewer'

	manifest {
		attributes(
				'Main-Class' : 'com.refinitiv.ema.examples.rrtmdviewer.desktop.RRTMDViewerDesktopMain'
		)
	}

	baseName('RRTMDViewer')

	from {
		configurations.compileClasspath.filter{ it.exists() }.collect { it.isDirectory() ? it : zipTree(it) }
	} with jar
}

