buildscript {
        repositories {
                gradlePluginPortal()
        }

        dependencies {
                classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
        }
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
    implementation project(':Ema:Core')
    implementation project(':Ema:Examples')
    implementation project(':Eta:Core')
    implementation project(':Eta:ValueAdd')
    implementation project(':Eta:ValueAddCache')
    implementation project(':Eta:AnsiPage')
    implementation project(':Eta:Applications:Shared')
    implementation project(':Eta:Applications:PerfTools')
    implementation project(':Eta:Applications:Examples')
}

shadowJar {
    archiveBaseName.convention('RTSDK');
    archiveBaseName.set('RTSDK');
}

task coberturaTestFatJar (type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveBaseName.convention('RTSDK');
    archiveBaseName.set('RTSDK');
    archiveClassifier.convention('coberturaTestFatJar');
    archiveClassifier.set('coberturaTestFatJar');
	from ('Core/build/instrumented_classes')
	from ('../Eta/Core/build/instrumented_classes')
	from ('../Eta/ValueAdd/build/instrumented_classes')
	configurations = [project.configurations.testRuntimeOnly]
}

// disable creating empty Ema.jar file
jar.enabled = false
